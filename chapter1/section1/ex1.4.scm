#lang racket/base

(define 
  (a-plus-abs-b a b)
  ((if (> b 0) + -) 
    a
    b
  )
)
; 現在我々が採用している置換モデルでは，演算子が複合式であるような組み合わせが作れる．
; 節1.1.3によれば，インタプリタはまず「組み合わせの部分式を評価する」，つまり演算子と被演算子を評価する．
; したがって，上記の(if (> b 0) + -)式は，bの値が正であるとき+演算子，そうでないとき-演算子に評価され，その結果に置換される
; 次に，「部分式の左端 (演算子) の値となっている手続きを、引数 (被演算子)、つまり部分式の残り値に適用する」．
; まとめると，a-plus-abs-bの振る舞いは
;   a + b (b > 0)
;   a - b (b <= 0)
; となり，aに"bの絶対値"を加算するという関数名に一致する

(a-plus-abs-b 10 5)
; 15

(a-plus-abs-b 10 -5)
; 15
